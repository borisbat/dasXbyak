// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

auto ann_Allocator = make_smart<Allocator_GeneratedAnnotation>(lib);
addAnnotation(ann_Allocator);
auto ann_Operand = make_smart<Operand_GeneratedAnnotation>(lib);
addAnnotation(ann_Operand);
auto ann_Reg = make_smart<Reg_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg);
auto ann_Reg8 = make_smart<Reg8_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg8);
auto ann_Reg16 = make_smart<Reg16_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg16);
auto ann_Mmx = make_smart<Mmx_GeneratedAnnotation>(lib);
addAnnotation(ann_Mmx);
auto ann_EvexModifierRounding = make_smart<EvexModifierRounding_GeneratedAnnotation>(lib);
addAnnotation(ann_EvexModifierRounding);
auto ann_EvexModifierZero = make_smart<EvexModifierZero_GeneratedAnnotation>(lib);
addAnnotation(ann_EvexModifierZero);
auto ann_Xmm = make_smart<Xmm_GeneratedAnnotation>(lib);
addAnnotation(ann_Xmm);
auto ann_Ymm = make_smart<Ymm_GeneratedAnnotation>(lib);
addAnnotation(ann_Ymm);
auto ann_Zmm = make_smart<Zmm_GeneratedAnnotation>(lib);
addAnnotation(ann_Zmm);
auto ann_Tmm = make_smart<Tmm_GeneratedAnnotation>(lib);
addAnnotation(ann_Tmm);
auto ann_Opmask = make_smart<Opmask_GeneratedAnnotation>(lib);
addAnnotation(ann_Opmask);
auto ann_BoundsReg = make_smart<BoundsReg_GeneratedAnnotation>(lib);
addAnnotation(ann_BoundsReg);
auto ann_Fpu = make_smart<Fpu_GeneratedAnnotation>(lib);
addAnnotation(ann_Fpu);
auto ann_Reg32e = make_smart<Reg32e_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg32e);
auto ann_Reg32 = make_smart<Reg32_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg32);
auto ann_Reg64 = make_smart<Reg64_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg64);
auto ann_RegRip = make_smart<RegRip_GeneratedAnnotation>(lib);
addAnnotation(ann_RegRip);
auto ann_Segment = make_smart<Segment_GeneratedAnnotation>(lib);
addAnnotation(ann_Segment);
auto ann_RegExp = make_smart<RegExp_GeneratedAnnotation>(lib);
addAnnotation(ann_RegExp);
auto ann_CodeArray = make_smart<CodeArray_GeneratedAnnotation>(lib);
addAnnotation(ann_CodeArray);
auto ann_Address = make_smart<Address_GeneratedAnnotation>(lib);
addAnnotation(ann_Address);
auto ann_AddressFrame = make_smart<AddressFrame_GeneratedAnnotation>(lib);
addAnnotation(ann_AddressFrame);
auto ann_JmpLabel = make_smart<JmpLabel_GeneratedAnnotation>(lib);
addAnnotation(ann_JmpLabel);
auto ann_Label = make_smart<Label_GeneratedAnnotation>(lib);
addAnnotation(ann_Label);
auto ann_LabelManager = make_smart<LabelManager_GeneratedAnnotation>(lib);
addAnnotation(ann_LabelManager);
auto ann_CodeGenerator = make_smart<CodeGenerator_GeneratedAnnotation>(lib);
addAnnotation(ann_CodeGenerator);
