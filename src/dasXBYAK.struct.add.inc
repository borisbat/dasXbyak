// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

auto ann_Allocator = make_smart<Xbyak_Allocator_GeneratedAnnotation>(lib);
addAnnotation(ann_Allocator);
auto ann_Operand = make_smart<Xbyak_Operand_GeneratedAnnotation>(lib);
addAnnotation(ann_Operand);
auto ann_Reg = make_smart<Xbyak_Reg_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg);
auto ann_Reg8 = make_smart<Xbyak_Reg8_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg8);
auto ann_Reg16 = make_smart<Xbyak_Reg16_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg16);
auto ann_Mmx = make_smart<Xbyak_Mmx_GeneratedAnnotation>(lib);
addAnnotation(ann_Mmx);
auto ann_EvexModifierRounding = make_smart<Xbyak_EvexModifierRounding_GeneratedAnnotation>(lib);
addAnnotation(ann_EvexModifierRounding);
auto ann_EvexModifierZero = make_smart<Xbyak_EvexModifierZero_GeneratedAnnotation>(lib);
addAnnotation(ann_EvexModifierZero);
auto ann_Xmm = make_smart<Xbyak_Xmm_GeneratedAnnotation>(lib);
addAnnotation(ann_Xmm);
auto ann_Ymm = make_smart<Xbyak_Ymm_GeneratedAnnotation>(lib);
addAnnotation(ann_Ymm);
auto ann_Zmm = make_smart<Xbyak_Zmm_GeneratedAnnotation>(lib);
addAnnotation(ann_Zmm);
auto ann_Tmm = make_smart<Xbyak_Tmm_GeneratedAnnotation>(lib);
addAnnotation(ann_Tmm);
auto ann_Opmask = make_smart<Xbyak_Opmask_GeneratedAnnotation>(lib);
addAnnotation(ann_Opmask);
auto ann_BoundsReg = make_smart<Xbyak_BoundsReg_GeneratedAnnotation>(lib);
addAnnotation(ann_BoundsReg);
auto ann_Fpu = make_smart<Xbyak_Fpu_GeneratedAnnotation>(lib);
addAnnotation(ann_Fpu);
auto ann_Reg32e = make_smart<Xbyak_Reg32e_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg32e);
auto ann_Reg32 = make_smart<Xbyak_Reg32_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg32);
auto ann_Reg64 = make_smart<Xbyak_Reg64_GeneratedAnnotation>(lib);
addAnnotation(ann_Reg64);
auto ann_RegRip = make_smart<Xbyak_RegRip_GeneratedAnnotation>(lib);
addAnnotation(ann_RegRip);
auto ann_Segment = make_smart<Xbyak_Segment_GeneratedAnnotation>(lib);
addAnnotation(ann_Segment);
auto ann_RegExp = make_smart<Xbyak_RegExp_GeneratedAnnotation>(lib);
addAnnotation(ann_RegExp);
auto ann_CodeArray = make_smart<Xbyak_CodeArray_GeneratedAnnotation>(lib);
addAnnotation(ann_CodeArray);
auto ann_Address = make_smart<Xbyak_Address_GeneratedAnnotation>(lib);
addAnnotation(ann_Address);
auto ann_AddressFrame = make_smart<Xbyak_AddressFrame_GeneratedAnnotation>(lib);
addAnnotation(ann_AddressFrame);
auto ann_JmpLabel = make_smart<Xbyak_JmpLabel_GeneratedAnnotation>(lib);
addAnnotation(ann_JmpLabel);
auto ann_Label = make_smart<Xbyak_Label_GeneratedAnnotation>(lib);
addAnnotation(ann_Label);
auto ann_LabelManager = make_smart<Xbyak_LabelManager_GeneratedAnnotation>(lib);
addAnnotation(ann_LabelManager);
auto ann_CodeGenerator = make_smart<Xbyak_CodeGenerator_GeneratedAnnotation>(lib);
addAnnotation(ann_CodeGenerator);
setParents(this,"Reg64",  {"Reg32e","Reg","Operand"});
setParents(this,"Address",  {"Operand"});
setParents(this,"CodeGenerator",  {"CodeArray"});
setParents(this,"Mmx",  {"Reg","Operand"});
setParents(this,"Opmask",  {"Reg","Operand"});
setParents(this,"BoundsReg",  {"Reg","Operand"});
setParents(this,"Tmm",  {"Reg","Operand"});
setParents(this,"Reg8",  {"Reg","Operand"});
setParents(this,"Reg",  {"Operand"});
setParents(this,"Ymm",  {"Xmm","Mmx","Reg","Operand"});
setParents(this,"Reg16",  {"Reg","Operand"});
setParents(this,"Xmm",  {"Mmx","Reg","Operand"});
setParents(this,"Zmm",  {"Ymm","Xmm","Mmx","Reg","Operand"});
setParents(this,"Reg32e",  {"Reg","Operand"});
setParents(this,"Fpu",  {"Reg","Operand"});
setParents(this,"Reg32",  {"Reg32e","Reg","Operand"});
